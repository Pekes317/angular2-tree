{"version":3,"sources":["/home/www/projects/angular2-tree/demo/src async","/home/www/projects/angular2-tree/demo/src/app/app.component.html","/home/www/projects/angular2-tree/demo/src/app/app.component.ts","/home/www/projects/angular2-tree/demo/src/app/app.module.ts","/home/www/projects/angular2-tree/demo/src/app/localStorage/treeLocalStorage.module.ts","/home/www/projects/angular2-tree/demo/src/app/localStorage/treeLocalStorage.service.ts","/home/www/projects/angular2-tree/demo/src/app/treeOne/treeOne.component.html","/home/www/projects/angular2-tree/demo/src/app/treeOne/treeOne.component.ts","/home/www/projects/angular2-tree/demo/src/app/treeOne/treeOne.module.ts","/home/www/projects/angular2-tree/demo/src/app/treeOne/treeOneNode.service.ts","/home/www/projects/angular2-tree/demo/src/app/treeTwo/newItem.component.html","/home/www/projects/angular2-tree/demo/src/app/treeTwo/newItem.component.less","/home/www/projects/angular2-tree/demo/src/app/treeTwo/newItem.component.ts","/home/www/projects/angular2-tree/demo/src/app/treeTwo/treeTwo.component.html","/home/www/projects/angular2-tree/demo/src/app/treeTwo/treeTwo.component.ts","/home/www/projects/angular2-tree/demo/src/app/treeTwo/treeTwo.module.ts","/home/www/projects/angular2-tree/demo/src/app/treeTwo/treeTwoNode.service.ts","/home/www/projects/angular2-tree/demo/src/environments/environment.ts","/home/www/projects/angular2-tree/demo/src/main.ts","/home/www/projects/angular2-tree/main.ts","/home/www/projects/angular2-tree/src/dragAndDrop/dragAndDrop.service.ts","/home/www/projects/angular2-tree/src/dragAndDrop/draggable.directive.ts","/home/www/projects/angular2-tree/src/dragAndDrop/droppable.directive.ts","/home/www/projects/angular2-tree/src/dragAndDrop/dropzone/dropzone.component.html","/home/www/projects/angular2-tree/src/dragAndDrop/dropzone/dropzone.component.less","/home/www/projects/angular2-tree/src/dragAndDrop/dropzone/dropzone.component.ts","/home/www/projects/angular2-tree/src/item/item.component.html","/home/www/projects/angular2-tree/src/item/item.component.less","/home/www/projects/angular2-tree/src/item/item.component.ts","/home/www/projects/angular2-tree/src/models/TreeModel.ts","/home/www/projects/angular2-tree/src/service/node.service.ts","/home/www/projects/angular2-tree/src/service/nodesDispatcher.service.ts","/home/www/projects/angular2-tree/src/store/treeActions.service.ts","/home/www/projects/angular2-tree/src/store/treeEffects.service.ts","/home/www/projects/angular2-tree/src/store/treeReducer.ts","/home/www/projects/angular2-tree/src/tree.component.html","/home/www/projects/angular2-tree/src/tree.component.less","/home/www/projects/angular2-tree/src/tree.component.ts","/home/www/projects/angular2-tree/src/tree.module.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../demo/src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/demo/src async\n// module id = ../../../../../demo/src async recursive\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <h2>Basic tree</h2>\\n    <app-tree-one></app-tree-one>\\n  </div>\\n  <div class=\\\"col-sm-6\\\">\\n    <h2>Tree with modified ItemComponent</h2>\\n    <app-tree-two></app-tree-two>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/demo/src/app/app.component.html\n// module id = ../../../../../demo/src/app/app.component.html\n// module chunks = 1","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport {AppComponent} from './app.component';\nimport {TreeOneModule} from './treeOne/treeOne.module';\nimport {TreeTwoModule} from './treeTwo/treeTwo.module';\nimport {StoreModule} from '@ngrx/store';\nimport {treeReducer} from '../../../main';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    TreeTwoModule,\n    TreeOneModule,\n    StoreModule.provideStore({trees: treeReducer}),\n    StoreDevtoolsModule.instrumentOnlyWithExtension({})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/app.module.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {TreeModule} from '../../../../main';\nimport {TreeLocalStorageNodeService} from './treeLocalStorage.service';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    TreeModule\n  ],\n  providers: [TreeLocalStorageNodeService]\n})\nexport class TreeLocalStorageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/localStorage/treeLocalStorage.module.ts","import {Injectable} from '@angular/core';\nimport {NodeService, IOuterNode} from '../../../../main';\nimport {Observable} from 'rxjs/Observable';\nimport {UUID} from 'angular2-uuid';\n\n@Injectable()\nexport class TreeLocalStorageNodeService extends NodeService {\n  protected treeName = 'tree';\n\n  protected nodes: IOuterNode[];\n\n  public load(nodeId = ''): Observable<IOuterNode[]> {\n    if (!this.nodes) {\n      this.nodes = this.getAllDataFromLocalStorage();\n    }\n\n    const nodes = this.getChildren(nodeId);\n\n    return Observable.of(nodes);\n  }\n\n  public add(node: IOuterNode, parentNodeId: string = null): Observable<IOuterNode> {\n    node.parentId = parentNodeId;\n    node.id = UUID.UUID();\n\n    this.nodes.push(node);\n\n    this.saveNodes();\n\n    return Observable.of(node);\n  }\n\n  public move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode> {\n    const srcId = srcNode.id;\n    const targetId = targetNode ? targetNode.id : null;\n\n    const index = this.findIndexByNodeId(srcId);\n\n    this.nodes[index].parentId = targetId;\n    this.saveNodes();\n\n    return Observable.of(this.nodes[index]);\n  }\n\n  public update(node: IOuterNode): Observable<IOuterNode> {\n    const index = this.findIndexByNodeId(node.id);\n\n    this.nodes[index] = node;\n    this.saveNodes();\n\n    return Observable.of(node);\n  }\n\n  public remove(nodeId: string): Observable<IOuterNode> {\n    const index = this.findIndexByNodeId(nodeId);\n    const node = this.nodes[index];\n\n    const hasChildren = this.getChildren(nodeId).length > 0;\n\n    if (!hasChildren) {\n      this.nodes.splice(index, 1);\n\n      this.saveNodes();\n\n      return Observable.of(node);\n    } else {\n      return Observable.throw('Node is not empty');\n    }\n\n  }\n\n  private findIndexByNodeId(nodeId: string): number {\n    return this.nodes.findIndex((node) => {\n      return node.id === nodeId;\n    });\n  }\n\n  private getChildren(nodeId: string): IOuterNode[] {\n    return this.nodes.filter((node: IOuterNode) => node.parentId === nodeId);\n  }\n\n\n  protected getAllDataFromLocalStorage(): IOuterNode[] {\n    try {\n      const data = localStorage.getItem(this.treeName)\n\n      if (data) {\n        return JSON.parse(data);\n      }\n\n      return [];\n\n    } catch (e) {\n      return [];\n    }\n  }\n\n  private saveNodes() {\n    try {\n      localStorage.setItem(this.treeName, JSON.stringify(this.nodes));\n    } catch (e) {\n      console.warn('State not save');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/localStorage/treeLocalStorage.service.ts","module.exports = \"<rign-tree\\n  [treeModel]=\\\"treeModel\\\"\\n></rign-tree>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/demo/src/app/treeOne/treeOne.component.html\n// module id = ../../../../../demo/src/app/treeOne/treeOne.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {IConfiguration, IContextMenu, ITreeState, ITreeData, TreeActionsService, TreeModel, NodeDispatcherService} from '../../../../main';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs/Observable';\nimport {TreeOneNodeService} from './treeOneNode.service';\n\n@Component({\n  selector: 'app-tree-one',\n  templateUrl: './treeOne.component.html'\n})\nexport class TreeOneComponent implements OnInit {\n  public folders: Observable<ITreeData>;\n\n  public contextMenu: IContextMenu[] = [];\n\n  public treeConfiguration: IConfiguration = {\n    showAddButton: true,\n    disableMoveNodes: false,\n    treeId: 'tree3',\n    dragZone: 'tree3',\n    dropZone: ['tree3']\n  };\n\n  public treeModel: TreeModel;\n\n  public constructor(private store: Store<ITreeState>,\n                     private treeActions: TreeActionsService,\n                     private nodeDispatcherService: NodeDispatcherService,\n                     private nodeService: TreeOneNodeService) {\n  }\n\n  public ngOnInit() {\n    const treeId = this.treeConfiguration.treeId;\n    this.nodeDispatcherService.register(treeId, this.nodeService);\n\n    this.store.dispatch(this.treeActions.registerTree(treeId));\n\n    this.folders = this.store.select('trees')\n      .map((data: ITreeState) => {\n        return data[treeId];\n      })\n      .filter((data: ITreeData) => !!data)\n    ;\n    this.treeModel = new TreeModel(this.folders, this.treeConfiguration);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/treeOne/treeOne.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport {TreeModule} from '../../../../main';\nimport {TreeOneNodeService} from './treeOneNode.service';\nimport {TreeOneComponent} from './treeOne.component';\n\n@NgModule({\n  declarations: [TreeOneComponent],\n  exports: [TreeOneComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    TreeModule\n  ],\n  providers: [TreeOneNodeService]\n})\nexport class TreeOneModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/treeOne/treeOne.module.ts","import {Injectable} from \"@angular/core\";\nimport {TreeLocalStorageNodeService} from '../localStorage/treeLocalStorage.service';\n\n@Injectable()\nexport class TreeOneNodeService extends TreeLocalStorageNodeService {\n  protected treeName = 'treeOne';\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/treeOne/treeOneNode.service.ts","module.exports = \"<div class=\\\"tree-item row\\\"\\n     [ngClass]=\\\"{'tree-item-selected': isSelected}\\\"\\n     ri-droppable\\n     ri-draggable\\n     [dragZone]=\\\"treeModel.configuration.dragZone\\\"\\n     [dropConfig]=\\\"{dropAllowedCssClass: 'drop-enabled', dropZone: treeModel.configuration.dropZone}\\\"\\n     [node]=\\\"node\\\"\\n>\\n  <div class=\\\"col-sm-8\\\">\\n    <i *ngIf=\\\"!isExpanded\\\" (click)=\\\"expand()\\\" class=\\\"fa fa-plus pointer\\\"></i>\\n    <i *ngIf=\\\"isExpanded\\\" (click)=\\\"collapse()\\\" class=\\\"fa fa-minus pointer\\\"></i>\\n    <span *ngIf=\\\"!isEditMode\\\" class=\\\"tree-item-name\\\" (click)=\\\"onSelect()\\\">{{node.name}}</span>\\n    <form name=\\\"form\\\">\\n      <input #inputElement type=\\\"text\\\" class=\\\"form-control\\\" *ngIf=\\\"isEditMode\\\" [formControl]=\\\"nameField\\\"\\n             name=\\\"name\\\" (keydown)=\\\"onChange($event)\\\" (blur)=\\\"onBlur($event)\\\"/>\\n    </form>\\n  </div>\\n  <div class=\\\"col-sm-4 text-right\\\">\\n      <span class=\\\"btn-group btn-group-sm\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"onEdit($event)\\\" [disabled]=\\\"isEditMode\\\">\\n          <i class=\\\"fa fa-edit\\\"></i>\\n        </button>\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"onDelete()\\\" [disabled]=\\\"isEditMode\\\">\\n          <i class=\\\"fa fa-trash\\\"></i>\\n        </button>\\n      </span>\\n  </div>\\n</div>\\n<div class=\\\"tree\\\" *ngIf=\\\"isExpanded\\\">\\n  <new-tree-item  *ngFor=\\\"let child of children$ | async\\\" [node]=\\\"child\\\" [treeModel]=\\\"treeModel\\\" [contextMenu]=\\\"contextMenu\\\"></new-tree-item>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/demo/src/app/treeTwo/newItem.component.html\n// module id = ../../../../../demo/src/app/treeTwo/newItem.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tree-item {\\n  display: block;\\n  margin: 10px 0;\\n  padding: 10px 5px;\\n  line-height: 30px;\\n  border: 1px solid black;\\n  border-radius: 3px;\\n  background-color: #eee;\\n}\\n.tree-item.drop-enabled {\\n  background-color: red;\\n}\\n.tree-item.tree-item-selected {\\n  background-color: orange;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/demo/src/app/treeTwo/newItem.component.less\n// module id = ../../../../../demo/src/app/treeTwo/newItem.component.less\n// module chunks = 1","import {Component} from '@angular/core';\nimport {ItemComponent} from '../../../../main';\n\n@Component({\n  selector: 'new-tree-item',\n  templateUrl: './newItem.component.html',\n  styleUrls: ['./newItem.component.less']\n})\nexport class NewItemComponent extends ItemComponent {\n  public onDelete($event: MouseEvent): void {\n    this.store.dispatch(this.treeActionsService.deleteNode(this.treeModel.treeId, this.node));\n  }\n\n  public onEdit($event: MouseEvent): void {\n    this.store.dispatch(this.treeActionsService.editNodeStart(this.node));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/treeTwo/newItem.component.ts","module.exports = \"<rign-tree [treeModel]=\\\"treeModel\\\">\\n  <new-tree-item *ngFor=\\\"let node of treeModel.getRootNodes() | async\\\" [node]=\\\"node\\\" [treeModel]=\\\"treeModel\\\" [contextMenu]=\\\"contextMenu\\\"></new-tree-item>\\n</rign-tree>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/demo/src/app/treeTwo/treeTwo.component.html\n// module id = ../../../../../demo/src/app/treeTwo/treeTwo.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {IConfiguration, IContextMenu, ITreeState, ITreeData, TreeModel, TreeActionsService, NodeDispatcherService} from '../../../../main';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs/Observable';\nimport {TreeTwoNodeService} from './treeTwoNode.service';\n\n@Component({\n  selector: 'app-tree-two',\n  templateUrl: './treeTwo.component.html'\n})\nexport class TreeTwoComponent implements OnInit {\n  public folders: Observable<ITreeData>;\n\n  public contextMenu: IContextMenu[] = [];\n\n  public treeConfiguration: IConfiguration = {\n    showAddButton: true,\n    disableMoveNodes: false,\n    treeId: 'tree2',\n    dragZone: 'tree2',\n    dropZone: ['tree2']\n  };\n\n  public treeModel: TreeModel;\n\n  public constructor(private store: Store<ITreeState>,\n                     private treeActions: TreeActionsService,\n                     private nodeDispatcherService: NodeDispatcherService,\n                     private treeTwoNodeService: TreeTwoNodeService) {\n  }\n\n  public ngOnInit() {\n    const treeId = this.treeConfiguration.treeId;\n    this.nodeDispatcherService.register(treeId, this.treeTwoNodeService);\n\n    this.store.dispatch(this.treeActions.registerTree(treeId));\n\n    this.folders = this.store.select('trees')\n      .map((data: ITreeState) => {\n        return data[treeId];\n      })\n      .filter((data: ITreeData) => !!data)\n    ;\n    this.treeModel = new TreeModel(this.folders, this.treeConfiguration);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/treeTwo/treeTwo.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport {TreeModule} from '../../../../main';\nimport {TreeTwoComponent} from './treeTwo.component';\nimport {NewItemComponent} from './newItem.component';\nimport {TreeTwoNodeService} from './treeTwoNode.service';\nimport {TreeLocalStorageModule} from '../localStorage/treeLocalStorage.module';\n\n@NgModule({\n  declarations: [\n    TreeTwoComponent,\n    NewItemComponent\n  ],\n  exports: [TreeTwoComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    TreeLocalStorageModule,\n    ReactiveFormsModule,\n    TreeModule\n  ],\n  providers: [TreeTwoNodeService]\n})\nexport class TreeTwoModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/treeTwo/treeTwo.module.ts","import {Injectable} from '@angular/core';\nimport {TreeLocalStorageNodeService} from '../localStorage/treeLocalStorage.service';\n\n@Injectable()\nexport class TreeTwoNodeService extends TreeLocalStorageNodeService {\n  protected treeName = 'treeTwo';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/app/treeTwo/treeTwoNode.service.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/environments/environment.ts","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/demo/src/main.ts","import {TreeModule} from './src/tree.module';\nimport {TreeComponent} from './src/tree.component';\nimport {ItemComponent} from './src/item/item.component';\nimport {TreeModel} from './src/models/TreeModel';\nimport {IAppConfig} from './src/interfaces/IAppConfig';\nimport {IConfiguration} from './src/interfaces/IConfiguration';\nimport {IContextMenu} from './src/interfaces/IContextMenu';\nimport {IOuterNode} from './src/interfaces/IOuterNode';\nimport {NodeService} from './src/service/node.service';\nimport {IApiConfig} from './src/IApiConfig.service';\nimport {TreeActionsService} from './src/store/treeActions.service';\nimport {NodeDispatcherService} from './src/service/nodesDispatcher.service';\nimport {TreeEffectsService} from './src/store/treeEffects.service';\nimport {ITreeState, ITreeData, ITreeAction} from './src/store/ITreeState';\nimport {treeReducer} from './src/store/treeReducer';\nexport {\n  IApiConfig,\n  TreeModule,\n  TreeComponent,\n  ItemComponent,\n  NodeService,\n  NodeDispatcherService,\n  TreeModel,\n  IAppConfig,\n  IConfiguration,\n  IContextMenu,\n  IOuterNode,\n  ITreeData,\n  ITreeState,\n  ITreeAction,\n  TreeActionsService,\n  TreeEffectsService,\n  treeReducer\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/main.ts","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {IDragAndDrop, IDragElement, IDropElement} from '../interfaces/IDragAndDrop';\n\n@Injectable()\nexport class DragAndDrop {\n  protected dropStream: Subject<IDropElement | null> = new Subject();\n  protected dragStream: BehaviorSubject<IDragElement | null> = new BehaviorSubject(null);\n\n  public drop = new Observable();\n\n  public constructor() {\n    this.drop = this.dropStream.withLatestFrom(this.dragStream, (dropNode: IDropElement, dragNode: IDragElement): IDragAndDrop => {\n      return {dragNode: dragNode, dropNode: dropNode};\n    });\n  }\n\n  public dragStart(node: IDragElement) {\n    this.dragStream.next(node);\n  }\n\n  public dragEnd(node: IDropElement | null) {\n    this.dropStream.next(node);\n  }\n\n  public getDragStream(): BehaviorSubject<IDragElement | null> {\n    return this.dragStream;\n  }\n\n  public getLastDragElement(): IDragElement {\n    return this.dragStream.getValue();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/dragAndDrop/dragAndDrop.service.ts","import {Directive, ElementRef, Input, OnChanges, OnInit, Renderer} from '@angular/core';\nimport {DragAndDrop} from './dragAndDrop.service';\nimport {IOuterNode} from '../interfaces/IOuterNode';\n\n@Directive({\n  selector: '[ri-draggable]'\n})\nexport class Draggable implements OnChanges, OnInit {\n  @Input() node: IOuterNode;\n  @Input() dragZone: string | null = null;\n\n  public dragEnabled = true;\n\n  public constructor(protected el: ElementRef, private renderer: Renderer, protected dragAndDrop: DragAndDrop) {\n    renderer.listen(el.nativeElement, 'dragstart', ($event) => {\n      if (this.dragEnabled) {\n        this.onDragStart($event);\n      }\n    });\n\n    renderer.listen(el.nativeElement, 'dragend', () => {\n      // on drag end we reset last drag element (this event is fired after drop)\n      this.dragAndDrop.dragStart(null);\n    });\n  }\n\n  private onDragStart($event) {\n    $event.dataTransfer.setData('node', this.node.id.toString());\n    this.dragAndDrop.dragStart({zoneId: this.dragZone, node: this.node});\n\n    $event.dataTransfer.effectAllowed = 'copy';\n    $event.dataTransfer.dropEffect = 'copy';\n  }\n\n  public ngOnChanges() {\n    // this.dragEnabled = !this.node.tree.configuration.disableMoveNodes;\n    this.el.nativeElement.draggable = this.dragEnabled;\n  }\n\n  public ngOnInit() {\n    if (!this.node) {\n      throw 'Draggable needs node';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/dragAndDrop/draggable.directive.ts","import {Directive, ElementRef, Input, OnInit, Renderer} from '@angular/core';\nimport {DragAndDrop} from './dragAndDrop.service';\nimport {IOuterNode} from '../interfaces/IOuterNode';\n\nexport interface DropConfig {\n  dropAllowedCssClass?: string;\n  dropZone?: string[] | null;\n}\n\n\n@Directive({\n  selector: '[ri-droppable]'\n})\nexport class Droppable implements OnInit {\n  @Input() node: IOuterNode;\n  @Input() dropConfig: DropConfig = {};\n\n  public constructor(protected el: ElementRef, private renderer: Renderer, protected dragAndDrop: DragAndDrop) {\n    renderer.listen(el.nativeElement, 'dragover', ($event) => {\n      $event.preventDefault();\n      const dropAllowed = this.isDropAllowed();\n\n      this.changeTargetCursor($event, dropAllowed);\n      this.toggleDropClass(dropAllowed);\n    });\n\n    renderer.listen(el.nativeElement, 'dragleave', ($event) => {\n      $event.preventDefault();\n      this.toggleDropClass(false);\n    });\n\n    renderer.listen(el.nativeElement, 'drop', () => {\n      this.toggleDropClass(false);\n      this.dragAndDrop.dragEnd({zones: this.dropConfig.dropZone, node: this.node});\n    });\n  }\n\n  public ngOnInit() {\n    this.initConfig();\n\n    if (!this.node) {\n      throw 'Droppable needs node';\n    }\n  }\n\n  /**\n   * Add or remove additional class when drop allowed\n   * @param dropAllowed\n   */\n  private toggleDropClass(dropAllowed = false) {\n    this.renderer.setElementClass(this.el.nativeElement, this.dropConfig.dropAllowedCssClass, dropAllowed);\n  }\n\n  private isDropAllowed = function () {\n    const lastDragElement = this.dragAndDrop.getLastDragElement();\n    const source = lastDragElement.node;\n    const target = this.node;\n    const dropZone = this.dropConfig.dropZone;\n\n    if (dropZone && dropZone.length > 0) {\n      return dropZone.indexOf(lastDragElement.zoneId) > -1;\n    }\n\n    // todo: check drag and drop zones\n    return !(source === target || target.id === source.parentId || target.parents.indexOf(source.id) > -1);\n  };\n\n  /**\n   * Change drag event cursor\n   * @param $event\n   * @param add\n   */\n  private changeTargetCursor($event: DragEvent, add = false) {\n    const cursorType = add ? 'copy' : 'none';\n\n    $event.dataTransfer.effectAllowed = cursorType;\n    $event.dataTransfer.dropEffect = cursorType;\n  }\n\n  /**\n   * initialize configuration options, use default or passed\n   */\n  private initConfig(): void {\n    const defaultConfig: DropConfig = {\n      dropAllowedCssClass: 'drop-allowed'\n    };\n\n    for (const key in defaultConfig) {\n      this.dropConfig[key] = this.dropConfig[key] || defaultConfig[key];\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/dragAndDrop/droppable.directive.ts","module.exports = \"<div *ngIf=\\\"isOpen\\\" (drop)=\\\"onDrop($event)\\\" (dragover)=\\\"onDragOver($event)\\\" class=\\\"dropzone\\\">\\n  Drop here to move node to root level\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/src/dragAndDrop/dropzone/dropzone.component.html\n// module id = ../../../../../src/dragAndDrop/dropzone/dropzone.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dropzone {\\n  display: inline-block;\\n  border: 1px dotted red;\\n  padding: 10px;\\n  background-color: rgba(255, 0, 0, 0.3);\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/src/dragAndDrop/dropzone/dropzone.component.less\n// module id = ../../../../../src/dragAndDrop/dropzone/dropzone.component.less\n// module chunks = 1","import {Component, Input} from '@angular/core';\nimport {TreeModel} from '../../models/TreeModel';\nimport {DragAndDrop} from '../dragAndDrop.service';\nimport {IDragElement} from '../../interfaces/IDragAndDrop';\n\n@Component({\n  selector: 'ri-dropzone',\n  templateUrl: './dropzone.component.html',\n  styleUrls: ['./dropzone.component.less']\n})\nexport class DropzoneComponent {\n  @Input() treeModel: TreeModel;\n  @Input() dropZone: string[] = [];\n\n  public isOpen = false;\n\n  constructor(public dragAndDrop: DragAndDrop) {\n    this.dragAndDrop.getDragStream()\n      .subscribe((dragElement: IDragElement) => {\n        const isDragElement = !!dragElement && !!dragElement.node;\n        const isNotRootElement = isDragElement && dragElement.node.parentId;\n        const isFromCurrentTree = isDragElement && dragElement.node.treeId === this.treeModel.treeId;\n\n        this.isOpen = (isNotRootElement && isFromCurrentTree) ? true : false;\n      });\n  }\n\n  public onDrop() {\n    this.dragAndDrop.dragEnd(null);\n  }\n\n  public onDragOver($event) {\n    $event.preventDefault();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/dragAndDrop/dropzone/dropzone.component.ts","module.exports = \"<div class=\\\"tree-item\\\"\\n     [ngClass]=\\\"{'tree-item-selected': isSelected}\\\"\\n     (contextmenu)=\\\"onContextMenu($event)\\\"\\n     ri-droppable\\n     ri-draggable\\n     [dragZone]=\\\"treeModel.configuration.dragZone\\\"\\n     [dropConfig]=\\\"{dropAllowedCssClass: 'drop-allowed', dropZone: treeModel.configuration.dropZone}\\\"\\n     [node]=\\\"node\\\"\\n>\\n  <i *ngIf=\\\"!isExpanded\\\" (click)=\\\"expand()\\\" class=\\\"fa fa-caret-right pointer\\\"></i>\\n  <i *ngIf=\\\"isExpanded\\\" (click)=\\\"collapse()\\\" class=\\\"fa fa-caret-down pointer\\\"></i>\\n  <span *ngIf=\\\"!isEditMode\\\" class=\\\"tree-item-name\\\" (click)=\\\"onSelect()\\\">{{node.name}}</span>\\n  <form name=\\\"form\\\">\\n    <input #inputElement type=\\\"text\\\" class=\\\"form-control\\\" *ngIf=\\\"isEditMode\\\" [formControl]=\\\"nameField\\\"\\n           name=\\\"name\\\" (keydown)=\\\"onChange($event)\\\" (blur)=\\\"onBlur($event)\\\"/>\\n  </form>\\n</div>\\n<div class=\\\"tree\\\" *ngIf=\\\"isExpanded\\\">\\n  <rign-tree-item *ngFor=\\\"let child of children$ | async\\\" [node]=\\\"child\\\" [treeModel]=\\\"treeModel\\\" [contextMenu]=\\\"contextMenu\\\"></rign-tree-item>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/src/item/item.component.html\n// module id = ../../../../../src/item/item.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".drop-allowed .tree-item-name {\\n  background-color: rgba(255, 0, 0, 0.3);\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/src/item/item.component.less\n// module id = ../../../../../src/item/item.component.less\n// module chunks = 1","import {\n  Component, ViewChild, Input, ViewEncapsulation, OnInit, AfterViewInit\n} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {ContextMenuComponent, ContextMenuService} from 'angular2-contextmenu';\nimport {IOuterNode} from '../interfaces/IOuterNode';\nimport {TreeActionsService} from '../store/treeActions.service';\nimport {Action, Store} from '@ngrx/store';\nimport {ITreeState} from '../store/ITreeState';\nimport {Observable} from 'rxjs/Observable';\nimport {TreeModel} from '../models/TreeModel';\nimport {Actions} from '@ngrx/effects';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'rign-tree-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.less']\n})\nexport class ItemComponent implements OnInit, AfterViewInit {\n  /**\n   * Input field where we can change node name\n   */\n  @ViewChild('inputElement') input: any;\n\n  /**\n   * Node instance\n   */\n  @Input() node: IOuterNode;\n\n  @Input() treeModel: TreeModel;\n\n  @Input() contextMenu: ContextMenuComponent;\n\n  /**\n   * Form field to change node name\n   * @type {FormControl}\n   */\n  public nameField = new FormControl();\n\n  public isEditMode = false;\n  public isSelected = false;\n  public isExpanded = false;\n\n  public children$: Observable<IOuterNode[]>;\n\n\n  protected insert$: Observable<Action> = this.actions$\n    .ofType(TreeActionsService.TREE_INSERT_NODE)\n    .filter((action: Action) => {\n      return action.payload && action.payload === this.node.id;\n    });\n\n  protected isStartSave = false;\n\n\n  /**\n   * @param contextMenuService\n   */\n  public constructor(protected store: Store<ITreeState>,\n                     protected treeActionsService: TreeActionsService,\n                     protected contextMenuService: ContextMenuService,\n                     protected actions$: Actions) {\n\n\n    this.actions$\n      .ofType(TreeActionsService.TREE_EXPAND_NODE)\n      .filter((action: Action): boolean => {\n        return !this.isExpanded && action.payload.node && this.node.id === action.payload.node.id;\n      })\n      .subscribe(() => {\n        this.expand();\n      });\n  }\n\n  public ngAfterViewInit() {\n    if (this.isEditMode) {\n      this.setFocus();\n    }\n  }\n\n  public ngOnInit() {\n    this.isEditMode = this.node.id === null;\n\n    this.children$ = this.treeModel.getChildren(this.node.id);\n\n    this.insert$\n      .subscribe(() => {\n        this.expand();\n      });\n\n    this.treeModel.currentSelectedNode$\n      .subscribe((node: IOuterNode) => {\n        this.isSelected = node && node.id === this.node.id;\n      });\n\n    this.actions$\n      .ofType(TreeActionsService.TREE_EDIT_NODE_START)\n      .filter((action: Action) => action.payload === this.node)\n      .subscribe(() => {\n        this.nameField.setValue(this.node.name);\n        this.isEditMode = true;\n        this.setFocus();\n      });\n\n  }\n\n  public collapse() {\n    this.isExpanded = false;\n  }\n\n  public expand() {\n    this.isExpanded = true;\n\n    this.store.dispatch(this.treeActionsService.loadTree(this.treeModel.treeId, this.node.id));\n  }\n\n  public onBlur() {\n    if (this.isStartSave) {\n      this.isStartSave = false;\n      return;\n    }\n\n    this.undoChanges();\n  }\n\n  public onChange(event: KeyboardEvent) {\n    event.stopPropagation();\n\n    if (event.keyCode === 27) {\n      this.undoChanges();\n    } else if (event.keyCode === 13) {\n      this.isStartSave = true;\n      const node: IOuterNode = {\n        id: this.node.id,\n        treeId: this.node.treeId,\n        name: this.nameField.value,\n        parentId: this.node.parentId,\n        children: this.node.children,\n        parents: this.node.parents\n      };\n\n      this.store.dispatch(this.treeActionsService.saveNode(this.treeModel.treeId, node));\n      this.isEditMode = false;\n    }\n  }\n\n  public onContextMenu($event: MouseEvent) {\n    if (!this.treeModel.configuration.disableContextMenu) {\n      this.contextMenuService.show.next({\n        contextMenu: this.contextMenu,\n        event: $event,\n        item: this.node\n      });\n    }\n\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n\n  public onSelect() {\n    this.treeModel.currentSelectedNode$.next(this.isSelected ? null : this.node);\n  }\n\n  protected isNewNode() {\n    return this.node.id === null;\n  }\n\n  protected setFocus() {\n    setTimeout(() => this.input.nativeElement.focus());\n  }\n\n  protected undoChanges() {\n    this.isEditMode = false;\n\n    if (this.isNewNode()) {\n      this.store.dispatch(this.treeActionsService.deleteNode(this.treeModel.treeId, this.node));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/item/item.component.ts","import {IOuterNode} from '../interfaces/IOuterNode';\nimport {Observable} from 'rxjs/Observable';\nimport {IConfiguration} from '../interfaces/IConfiguration';\nimport {ITreeData, ITreeState} from '../store/ITreeState';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\nexport class TreeModel {\n  public currentSelectedNode$: BehaviorSubject<IOuterNode> = new BehaviorSubject(null);\n\n  public get treeId(): string {\n    return this.configuration.treeId;\n  }\n\n  public constructor(private nodes$: Observable<ITreeData>,\n                     public configuration: IConfiguration) {\n    this.initConfiguration();\n  }\n\n  public getRootNodes() {\n    return this.getChildren(null);\n  }\n\n  public getChildren(nodeId: string | null) {\n    return this.nodes$\n      .map((state: ITreeData) => this.getNodesByParentId(state, nodeId))\n      .map((nodes: IOuterNode[]) => {\n        return nodes.sort(this.sortNodes);\n      });\n  }\n\n  private initConfiguration(): void {\n    const defaultConfiguration: IConfiguration = {\n      disableMoveNodes: false,\n      dragZone: null,\n      dropZone: null,\n      treeId: 'tree',\n      showAddButton: true,\n    };\n\n    for (const key in defaultConfiguration) {\n      if (this.configuration[key] === undefined) {\n        this.configuration[key] = defaultConfiguration[key];\n      }\n    }\n  }\n\n  private getNodesByParentId(state: ITreeData, id: string | null): IOuterNode[] {\n    return Object.keys(state)\n      .filter((key: string) => state[key].parentId === id)\n      .map((key: string) => state[key]);\n  }\n\n  private sortNodes(first: IOuterNode, second: IOuterNode): number {\n    if (second.id === null) {\n      return 1;\n    }\n\n    return first.name > second.name ? 1 : -1;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/models/TreeModel.ts","import {Injectable, Inject} from '@angular/core';\nimport {Http, URLSearchParams, Response} from '@angular/http';\nimport {Observable} from 'rxjs';\nimport {IOuterNode} from '../interfaces/IOuterNode';\nimport {IApiConfig} from '../IApiConfig.service';\n\nexport interface INodeService {\n  load(nodeId: string): Observable<IOuterNode[]>;\n  add(node: IOuterNode, parentNodeId: string | null): Observable<IOuterNode>;\n  move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode>;\n  update(node: IOuterNode): Observable<IOuterNode>;\n  remove(nodeId: string): Observable<IOuterNode>;\n}\n\n@Injectable()\nexport class NodeService implements INodeService {\n  protected apiConfig: IApiConfig = {\n    addUrl: '/api/nodes',\n    getUrl: '/api/nodes',\n    moveUrl: '/api/nodes/move',\n    updateUrl: '/api/nodes',\n    removeUrl: '/api/nodes',\n  };\n\n  public constructor(protected http: Http) {\n  }\n\n  public load(nodeId = ''): Observable<IOuterNode[]> {\n    const params = new URLSearchParams();\n    params.set('nodeId', nodeId);\n    const options = {\n      search: params\n    };\n    return this.http.get(this.getPath('GET', nodeId), options)\n      .map((res: Response) => {\n        const body = res.json();\n\n        return body || [];\n      });\n  }\n\n\n  public add(node: IOuterNode, parentNodeId: string = null): Observable<IOuterNode> {\n    const data = {\n      node: node,\n      parentNodeId: parentNodeId\n    };\n    return this.http.post(this.getPath('CREATE', parentNodeId), data)\n      .map((res: Response) => {\n        const body = res.json();\n\n        return body || [];\n      });\n  }\n\n  public move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode> {\n    const srcId = srcNode.id;\n    const targetId = targetNode ? targetNode.id : null;\n\n    return this.http.put(this.getPath('MOVE', srcId, targetId), {source: srcId, target: targetId})\n      .map((res: Response) => {\n        const body = res.json();\n\n        return body || [];\n      });\n  }\n\n  public update(node: IOuterNode): Observable<IOuterNode> {\n    return this.http.put(this.getPath('UPDATE', node.id), node)\n      .map((res: Response) => {\n        const body = res.json();\n\n        return body || [];\n      });\n  }\n\n  public remove(nodeId: string): Observable<IOuterNode> {\n    return this.http.delete(this.getPath('REMOVE', nodeId), {body: {nodeId: nodeId}})\n      .map((res: Response) => {\n        const body = res.json();\n\n        return body || [];\n      });\n  }\n\n  /**\n   *\n   * Replace in url nodeIds\n   *\n   * @param type\n   * @param nodeId\n   * @param destNodeId\n   * @returns {void|string|any}\n   */\n  protected getPath(type: string, nodeId: string, destNodeId: string = null) {\n    if (!this.apiConfig) {\n      throw 'No API configuration for Tree';\n    }\n\n    const urlMap = {\n      'GET': this.apiConfig.getUrl,\n      'CREATE': this.apiConfig.addUrl,\n      'REMOVE': this.apiConfig.removeUrl,\n      'UPDATE': this.apiConfig.updateUrl,\n      'MOVE': this.apiConfig.moveUrl\n    };\n\n    let path = this.replaceNodeId(urlMap[type], nodeId);\n\n    if (destNodeId) {\n      path = this.replaceDestNodeId(path, destNodeId);\n    }\n\n    return path;\n  }\n\n  protected replaceNodeId(url: string, nodeId: string) {\n    return url.replace('{nodeId}', nodeId);\n  }\n\n  protected replaceDestNodeId(url: string, nodeId: string) {\n    return url.replace('{destNodeId}', nodeId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/service/node.service.ts","import {Injectable} from '@angular/core';\nimport {INodeService, NodeService} from './node.service';\n\n@Injectable()\nexport class NodeDispatcherService {\n  private services: { [key: string]: INodeService } = {};\n\n  constructor(private nodeService: NodeService) {\n    this.services['tree'] = nodeService;\n  }\n\n  public register(key: string, service: INodeService): NodeDispatcherService {\n    this.services[key] = service;\n\n    return this;\n  }\n\n  public unregister(key: string): NodeDispatcherService {\n    if (this.services[key]) {\n      delete this.services[key];\n    } else {\n      console.warn('[NodeDispatcherService] No service for key ' + key);\n    }\n\n    return this;\n  }\n\n  public get(key: string): INodeService {\n    if (this.services[key]) {\n      return this.services[key];\n    } else {\n      throw '[NodeDispatcherService] No service for key ' + key;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/service/nodesDispatcher.service.ts","import {Injectable} from '@angular/core';\nimport {IOuterNode} from '../interfaces/IOuterNode';\nimport {Action} from '@ngrx/store';\nimport {ITreeAction} from './ITreeState';\n\n@Injectable()\nexport class TreeActionsService {\n  static TREE_SAVE_NODE = 'TREE_SAVE_NODE';\n  static TREE_SAVE_NODE_SUCCESS = 'TREE_SAVE_NODE_SUCCESS';\n  static TREE_SAVE_NODE_ERROR = 'TREE_SAVE_NODE_ERROR';\n  static TREE_DELETE_NODE = 'TREE_DELETE_NODE';\n  static TREE_DELETE_NODE_SUCCESS = 'TREE_DELETE_NODE_SUCCESS';\n  static TREE_DELETE_NODE_ERROR = 'TREE_DELETE_NODE_ERROR';\n  static TREE_EDIT_NODE_START = 'TREE_EDIT_NODE_START';\n  static TREE_EXPAND_NODE = 'TREE_EXPAND_NODE';\n  static TREE_INSERT_NODE = 'TREE_INSERT_NODE';\n  static TREE_LOAD = 'TREE_LOAD';\n  static TREE_LOAD_SUCCESS = 'TREE_LOAD_SUCCESS';\n  static TREE_LOAD_ERROR = 'TREE_LOAD_ERROR';\n  static TREE_MOVE_NODE = 'TREE_MOVE_NODE';\n  static TREE_MOVE_NODE_SUCCESS = 'TREE_MOVE_NODE_SUCCESS';\n  static TREE_MOVE_NODE_ERROR = 'TREE_MOVE_NODE_ERROR';\n\n  static TREE_REGISTER = 'TREE_REGISTER';\n\n  public registerTree(treeId: string): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_REGISTER,\n      payload: {\n        treeId: treeId\n      }\n    };\n  }\n\n  public editNodeStart(node: IOuterNode): Action {\n    return {\n      type: TreeActionsService.TREE_EDIT_NODE_START,\n      payload: node\n    };\n  }\n\n  public saveNode(treeId: string, node: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_SAVE_NODE,\n      payload: {\n        treeId: treeId,\n        node: node\n      }\n    };\n  }\n\n  public saveNodeSuccess(treeId: string, oldNode: IOuterNode, node: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_SAVE_NODE_SUCCESS,\n      payload: {\n        treeId: treeId,\n        oldNode: oldNode,\n        node: node\n      }\n    };\n  }\n\n  public saveNodeError(treeId: string, node: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_SAVE_NODE_ERROR,\n      payload: {\n        treeId: treeId,\n        node: node\n      }\n    };\n  }\n\n  public deleteNode(treeId: string, node: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_DELETE_NODE,\n      payload: {\n        treeId: treeId,\n        node: node\n      }\n    };\n  }\n\n  public expandNode(treeId: string, node: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_EXPAND_NODE,\n      payload: {\n        treeId: treeId,\n        node: node\n      }\n    };\n  }\n\n  public deleteNodeSuccess(treeId: string, node: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_DELETE_NODE_SUCCESS,\n      payload: {\n        treeId: treeId,\n        node: node\n      }\n    };\n  }\n\n  public deleteNodeError(treeId: string, node: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_DELETE_NODE_ERROR,\n      payload: {\n        treeId: treeId,\n        node: node\n      }\n    };\n  }\n\n  public insertNode(treeId: string, parentId: string | null): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_INSERT_NODE,\n      payload: {\n        treeId: treeId,\n        id: parentId\n      }\n    };\n  }\n\n  public loadTree(treeId: string, id: string | null): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_LOAD,\n      payload: {\n        treeId: treeId,\n        id: id\n      }\n    };\n  }\n\n  public loadTreeSuccess(treeId: string, id: string | null, nodes: IOuterNode[]): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_LOAD_SUCCESS,\n      payload: {\n        treeId: treeId,\n        id: id,\n        nodes: nodes\n      }\n    };\n  }\n\n  public loadTreeError(treeId: string, id: string | null): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_LOAD_ERROR,\n      payload: {\n        treeId: treeId,\n        id: id\n      }\n    };\n  }\n\n  public moveNode(treeId: string, source: IOuterNode, target: IOuterNode | null): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_MOVE_NODE,\n      payload: {\n        treeId: treeId,\n        oldNode: source,\n        node: target\n      }\n    };\n  }\n\n  public moveNodeSuccess(treeId: string, source: IOuterNode, target: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_MOVE_NODE_SUCCESS,\n      payload: {\n        treeId: treeId,\n        source: source,\n        target: target\n      }\n    };\n  }\n\n  public moveNodeError(treeId: string, source: IOuterNode, target: IOuterNode): ITreeAction {\n    return {\n      type: TreeActionsService.TREE_MOVE_NODE_ERROR,\n      payload: {\n        treeId: treeId,\n        source: source,\n        target: target\n      }\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/store/treeActions.service.ts","import {Injectable} from '@angular/core';\nimport {Actions, Effect} from '@ngrx/effects';\nimport {TreeActionsService} from './treeActions.service';\nimport {IOuterNode} from '../interfaces/IOuterNode';\nimport {Observable} from 'rxjs/Observable';\nimport {ITreeAction, ITreeActionPayload} from './ITreeState';\nimport {NodeDispatcherService} from '../service/nodesDispatcher.service';\n\n@Injectable()\nexport class TreeEffectsService {\n\n  @Effect() register$ = this.actions$\n    .ofType(TreeActionsService.TREE_REGISTER)\n    .map((action: ITreeAction): ITreeAction => this.treeActions.loadTree(action.payload.treeId, null));\n\n  @Effect() load$ = this.actions$\n    .ofType(TreeActionsService.TREE_LOAD)\n    .mergeMap((action: ITreeAction) => this.loadNodes(action.payload.treeId, action.payload.id)\n      .map((nodesData: IOuterNode[]): ITreeAction => this.treeActions.loadTreeSuccess(action.payload.treeId, action.payload.id, nodesData))\n      .catch(() => Observable.of(this.treeActions.loadTreeError(action.payload.treeId, action.payload.id)))\n    );\n\n\n  @Effect() delete$ = this.actions$\n    .ofType(TreeActionsService.TREE_DELETE_NODE)\n    .switchMap((action: ITreeAction) => this.deleteNode(action.payload.treeId, action.payload.node)\n      .map((): ITreeAction => this.treeActions.deleteNodeSuccess(action.payload.treeId, action.payload.node))\n      .catch((): Observable<ITreeAction> => Observable.of(this.treeActions.deleteNodeError(action.payload.treeId, action.payload.node)))\n    );\n\n\n  @Effect() save$ = this.actions$\n    .ofType(TreeActionsService.TREE_SAVE_NODE)\n    .switchMap((action: ITreeAction) => this.saveNode(action.payload.treeId, action.payload.node)\n      .map((node: IOuterNode): ITreeAction => this.treeActions.saveNodeSuccess(action.payload.treeId, action.payload.node, node))\n      .catch(() => Observable.of(this.treeActions.saveNodeError(action.payload.treeId, action.payload.node)))\n    );\n\n  @Effect() move$ = this.actions$\n    .ofType(TreeActionsService.TREE_MOVE_NODE)\n    .switchMap((action: ITreeAction) => this.moveNode(action.payload.treeId, action.payload.oldNode, action.payload.node)\n      .map((node: IOuterNode): ITreeActionPayload => {\n        return {\n          treeId: action.payload.treeId,\n          oldNode: action.payload.oldNode,\n          node: node\n        };\n      })\n      .catch(() => {\n        this.treeActions.moveNodeError(action.payload.treeId, action.payload.oldNode, action.payload.node);\n\n        return Observable.of(action.payload);\n      })\n    )\n    .mergeMap((data: ITreeActionPayload) => {\n      return [\n        this.treeActions.moveNodeSuccess(data.treeId, data.oldNode, data.node),\n        this.treeActions.loadTree(data.treeId, data.node.parentId)\n      ];\n    });\n\n  constructor(private actions$: Actions,\n              private treeActions: TreeActionsService,\n              private nodeDispatcherService: NodeDispatcherService) {\n  }\n\n  protected deleteNode(treeId: string, node: IOuterNode): Observable<IOuterNode> {\n    const nodeService = this.nodeDispatcherService.get(treeId);\n\n    return node.id ? nodeService.remove(node.id) : Observable.of(node);\n  }\n\n  protected loadNodes(treeId: string, id: string | null) {\n    const nodeService = this.nodeDispatcherService.get(treeId);\n\n    return nodeService.load(id);\n  }\n\n  protected saveNode(treeId: string, node: IOuterNode): Observable<IOuterNode> {\n    const nodeService = this.nodeDispatcherService.get(treeId);\n\n    if (node.id) {\n      return nodeService.update(node);\n    } else {\n      return nodeService.add(node, node.parentId);\n    }\n  }\n\n  protected moveNode(treeId: string, source: IOuterNode, target: IOuterNode): Observable<IOuterNode> {\n    const nodeService = this.nodeDispatcherService.get(treeId);\n\n    return nodeService.move(source, target);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/store/treeEffects.service.ts","import {ITreeAction, ITreeData, ITreeState} from './ITreeState';\nimport {Action} from '@ngrx/store';\nimport {TreeActionsService} from './treeActions.service';\nimport {IOuterNode} from '../interfaces/IOuterNode';\n\nfunction copyState(state: ITreeState, treeId: string = null) {\n  let newState = {};\n\n  // todo: find better way to clone object\n  if (treeId) {\n    Object.keys(state)\n      .filter((key) => key !== treeId)\n      .forEach((key) => newState[key] = state[key]);\n\n    newState[treeId] = {};\n\n    Object.keys(state[treeId])\n      .forEach((key) => newState[treeId][key] = state[treeId][key]);\n  } else {\n    newState = state;\n  }\n\n  return newState;\n}\n\nfunction removeNode(state: ITreeState, action: Action): ITreeState {\n  const newState = copyState(state, action.payload.treeId);\n  const parentId = action.payload.parentId;\n  const treeId = action.payload.treeId;\n  const treeState = newState[treeId];\n  const node = action.payload.node;\n\n  delete treeState[node.id];\n\n  if (parentId) {\n    const parent = treeState[node.parentId];\n\n    parent.children.splice(parent.children.indexOf(node.parentId), 1);\n  }\n\n  return newState;\n}\n\n\nfunction loadNodes(state: ITreeState, action: ITreeAction) {\n  const newState = copyState(state, action.payload.treeId);\n  let parent: IOuterNode | null = null;\n  const treeId = action.payload.treeId;\n  const parentId = action.payload.id;\n\n  if (parentId) {\n    parent = newState[treeId][parentId];\n    parent.children = [];\n  } else {\n    newState[treeId] = {};\n  }\n\n  action.payload.nodes.forEach((nodeData: IOuterNode) => {\n    nodeData.treeId = treeId;\n    if (parent) {\n      parent.children.push(nodeData.id);\n      nodeData.parents = [...parent.parents, ...[parent.id]];\n    } else {\n      nodeData.parents = [];\n    }\n\n    newState[treeId][nodeData.id] = nodeData;\n  });\n\n  return newState;\n}\n\n\nfunction insertNode(state: ITreeState, action: Action): ITreeState {\n  const newState = copyState(state, action.payload.treeId);\n  const newNode: IOuterNode = {\n    id: null,\n    treeId: action.payload.treeId,\n    name: 'New node',\n    parentId: action.payload.id,\n    children: [],\n    parents: []\n  };\n\n  newState[action.payload.treeId][null] = newNode;\n\n  return newState;\n}\n\nfunction saveNode(state: ITreeState, action: ITreeAction): ITreeState {\n  const newState = copyState(state, action.payload.treeId);\n  const old = action.payload.oldNode;\n  const newNode = action.payload.node;\n  const treeId = action.payload.treeId;\n  const treeState = newState[treeId];\n\n  if (treeState[null]) {\n    delete treeState[null];\n  } else {\n    delete treeState[old.id];\n  }\n\n  const nodeId = newNode.id;\n  treeState[nodeId] = newNode;\n\n  const parentId = newNode.parentId;\n\n  if (parentId) {\n    if (treeState[parentId]) {\n      if (!treeState[parentId].children) {\n        treeState[parentId].children = [];\n      }\n\n      treeState[parentId].children.push(nodeId);\n    }\n\n    newNode.children = Object.keys(state[treeId])\n      .filter((key: string) => key === nodeId);\n  }\n\n  return newState;\n}\n\nfunction moveNode(state: ITreeState, action: Action) {\n  const newState = copyState(state, action.payload.treeId);\n  const oldNode = action.payload.source;\n  const newNode = action.payload.target;\n  const treeId = action.payload.treeId;\n  const treeState = newState[treeId];\n\n  // remove old nodes\n  delete treeState[oldNode.id];\n\n  // remove info about removed child\n  if (oldNode.parentId) {\n    const parent = treeState[oldNode.parentId];\n    parent.children.splice(parent.children.indexOf(oldNode.id), 1);\n  }\n\n  // add node\n  treeState[newNode.id] = newNode;\n\n  if (newNode.parentId) {\n    const newParent = treeState[newNode.parentId];\n\n    if (newParent.children) {\n      newParent.children.push(newNode.id);\n    }\n    newNode.parents = [...newParent.parents, ...[newParent.id]];\n  } else {\n    newNode.parents = [];\n  }\n\n  return newState;\n}\n\nfunction registerTree(state: ITreeState, action: ITreeAction) {\n  const newState = copyState(state);\n\n  newState[action.payload.treeId] = <ITreeData>{};\n\n  return newState;\n}\n\nexport function treeReducer(state: ITreeState = {}, action: ITreeAction): ITreeState {\n  switch (action.type) {\n    case TreeActionsService.TREE_REGISTER:\n      return registerTree(state, action);\n    case TreeActionsService.TREE_SAVE_NODE_SUCCESS:\n      return saveNode(state, action);\n    case TreeActionsService.TREE_DELETE_NODE_SUCCESS:\n      return removeNode(state, action);\n    case TreeActionsService.TREE_INSERT_NODE:\n      return insertNode(state, action);\n    case TreeActionsService.TREE_LOAD_SUCCESS:\n      return loadNodes(state, action);\n    case TreeActionsService.TREE_MOVE_NODE_SUCCESS:\n      return moveNode(state, action);\n    case TreeActionsService.TREE_DELETE_NODE:\n    case TreeActionsService.TREE_EDIT_NODE_START:\n    case TreeActionsService.TREE_EXPAND_NODE:\n    case TreeActionsService.TREE_LOAD:\n    case TreeActionsService.TREE_MOVE_NODE:\n    case TreeActionsService.TREE_SAVE_NODE:\n      return state;\n    default:\n      return state;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/store/treeReducer.ts","module.exports = \"<div class=\\\"tree\\\">\\n  <button *ngIf=\\\"treeModel.configuration.showAddButton\\\" class=\\\"btn btn-default\\\" (click)=\\\"onAdd()\\\">\\n    <i class=\\\"fa fa-plus\\\"></i> Add node\\n  </button>\\n  <div #customTemplate><!-- no space --><ng-content></ng-content><!-- no space --></div>\\n<div *ngIf=\\\"customTemplate.childNodes.length === 0\\\">\\n  <rign-tree-item *ngFor=\\\"let node of treeModel.getRootNodes() | async\\\" [node]=\\\"node\\\" [treeModel]=\\\"treeModel\\\" [contextMenu]=\\\"contextMenu\\\"></rign-tree-item>\\n</div>\\n  <ri-dropzone [treeModel]=\\\"treeModel\\\"></ri-dropzone>\\n  <context-menu #contextMenu>\\n    <template *ngFor=\\\"let menuItem of menuList\\\" contextMenuItem let-item\\n              (execute)=\\\"onContextMenuClick(menuItem.name, $event.item)\\\">\\n      <span class=\\\"{{menuItem.iconCls}}\\\" style=\\\"width: 20px; display: inline-block;\\\"></span>\\n      {{menuItem.text}}\\n    </template>\\n  </context-menu>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/src/tree.component.html\n// module id = ../../../../../src/tree.component.html\n// module chunks = 1","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tree {\\n  list-style-type: none;\\n  margin: 0;\\n  padding-left: 0;\\n  position: relative;\\n}\\n.tree .dropdown {\\n  position: inherit;\\n}\\n.tree .dropdown-menu {\\n  position: absolute !important;\\n}\\n.tree .pointer {\\n  cursor: pointer;\\n}\\n.tree .tree {\\n  margin-left: 20px;\\n}\\n.tree .tree-edit-btn,\\n.tree .tree-remove-btn {\\n  display: none;\\n}\\n.tree .tree-item {\\n  padding: 2px 0;\\n}\\n.tree .tree-item.tree-item-selected > .tree-item-name {\\n  padding: 0 1px;\\n  border: 1px solid #4684ee;\\n  background-color: #549dee;\\n}\\n.tree .tree-item i {\\n  width: 8px !important;\\n  text-align: center;\\n}\\n.tree .tree-item .no-children {\\n  display: inline-block;\\n  width: 8px;\\n}\\n.tree .tree-item .tree-item-name {\\n  display: inline-block;\\n  line-height: 22px;\\n  height: 22px;\\n  padding: 0 2px;\\n  cursor: pointer;\\n}\\n.tree .tree-item .tree-item-name:hover {\\n  background-color: rgba(161, 197, 238, 0.2);\\n}\\n.tree .tree-item .tree-item-name:hover .tree-edit-btn,\\n.tree .tree-item .tree-item-name:hover .tree-remove-btn {\\n  display: inline-block;\\n}\\n.tree .tree-item form {\\n  display: inline-block;\\n}\\n.tree .tree-item form input {\\n  width: auto;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-tree/src/tree.component.less\n// module id = ../../../../../src/tree.component.less\n// module chunks = 1","import {Component, OnChanges, Input, ViewEncapsulation, ViewChild, OnInit} from '@angular/core';\nimport {IOuterNode} from './interfaces/IOuterNode';\nimport {IContextMenu} from './interfaces/IContextMenu';\nimport {TreeModel} from './models/TreeModel';\nimport {ContextMenuComponent} from 'angular2-contextmenu';\nimport {DragAndDrop} from './dragAndDrop/dragAndDrop.service';\nimport {IDragAndDrop} from './interfaces/IDragAndDrop';\nimport {TreeActionsService} from './store/treeActions.service';\nimport {Store} from '@ngrx/store';\nimport {ITreeState} from './store/ITreeState';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'rign-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.less']\n})\nexport class TreeComponent implements OnInit, OnChanges {\n  @Input() treeModel: TreeModel;\n\n  @ViewChild('contextMenu') contextMenu: ContextMenuComponent;\n\n  /**\n   * List of default options for context menu\n   *\n   * @type {{name: string; text: string; iconCls: string}[]}\n   */\n  private defaultOptions: IContextMenu[] = [\n    {\n      name: 'onEdit',\n      text: 'Edit name',\n      iconCls: 'fa fa-edit'\n    },\n    {\n      name: 'onDelete',\n      text: 'Remove',\n      iconCls: 'fa fa-trash'\n    }\n  ];\n\n  /**\n   * List of context menu items\n   *\n   * @type {Array}\n   */\n  public menuList: IContextMenu[] = [];\n\n  public constructor(protected store: Store<ITreeState>,\n                     protected treeActions: TreeActionsService,\n                     protected dragAndDrop: DragAndDrop) {\n\n  }\n\n  public ngOnInit() {\n    this.registerMove();\n  }\n\n  public ngOnChanges(data: any) {\n    this.menuList = [];\n    this.defaultOptions.forEach((item) => this.menuList.push(item));\n  }\n\n  public onAdd() {\n    const parent = this.treeModel.currentSelectedNode$.getValue();\n    const parentId = parent ? parent.id : null;\n\n    this.store.dispatch(this.treeActions.expandNode(this.treeModel.treeId, parent));\n    this.store.dispatch(this.treeActions.insertNode(this.treeModel.treeId, parentId));\n  }\n\n  /**\n   * On select item from context menu\n   *\n   * @param name - name of the event\n   * @param node - node item\n   */\n  public onContextMenuClick(name: string, node: IOuterNode) {\n\n    switch (name) {\n      case 'onEdit':\n        event.stopPropagation();\n        this.store.dispatch(this.treeActions.editNodeStart(node));\n        break;\n      case 'onDelete':\n        this.store.dispatch(this.treeActions.deleteNode(this.treeModel.treeId, node));\n        break;\n      default:\n        console.warn('Unknown context menu action: ' + name);\n    }\n  }\n\n  /**\n   * Register node \"move event\"\n   */\n  protected registerMove(): void {\n    if (this.treeModel.configuration.disableMoveNodes) {\n      return;\n    }\n\n    this.dragAndDrop.drop\n      .filter((data: IDragAndDrop) => {\n        if (data.dropNode) {\n          return data.dropNode.node.treeId === this.treeModel.treeId;\n        } else {\n          return data.dragNode.node.treeId === this.treeModel.treeId;\n        }\n      })\n      .subscribe((data: IDragAndDrop) => {\n        if (data.dropNode && data.dropNode.zones && data.dropNode.zones.indexOf(data.dragNode.zoneId) === -1) {\n          return;\n        }\n\n        const dropNode = data.dropNode ? data.dropNode.node : null;\n        this.store.dispatch(this.treeActions.moveNode(this.treeModel.treeId, data.dragNode.node, dropNode));\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/tree.component.ts","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ItemComponent} from './item/item.component';\nimport {NodeService} from './service/node.service';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ContextMenuModule} from 'angular2-contextmenu';\nimport {TreeComponent} from './tree.component';\nimport {DndModule} from 'ng2-dnd';\nimport {DragAndDrop} from './dragAndDrop/dragAndDrop.service';\nimport {Draggable} from './dragAndDrop/draggable.directive';\nimport {Droppable} from './dragAndDrop/droppable.directive';\nimport {DropzoneComponent} from './dragAndDrop/dropzone/dropzone.component';\nimport {TreeActionsService} from './store/treeActions.service';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {TreeEffectsService} from './store/treeEffects.service';\nimport {NodeDispatcherService} from './service/nodesDispatcher.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ContextMenuModule,\n    DndModule.forRoot(),\n    EffectsModule.run(TreeEffectsService),\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StoreModule\n  ],\n  declarations: [TreeComponent, ItemComponent, Draggable, Droppable, DropzoneComponent],\n  exports: [TreeComponent, ItemComponent, Draggable, Droppable, DropzoneComponent, StoreModule, EffectsModule],\n  providers: [DragAndDrop, NodeService, TreeActionsService, TreeEffectsService, NodeDispatcherService],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TreeModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-tree/src/tree.module.ts"],"sourceRoot":"webpack:///"}